<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="name.lizhe.lira.module.issue.dao.mapper.IssueMapper" >

	<insert id="createIssue" parameterType="name.lizhe.lira.module.issue.bean.IssueBean">
	<![CDATA[
		insert into Issues 
			(
				project_id,
				issue_key,
				name, 
				summary,
				type, 
				priority, 
				labels, 
				status, 
				description, 
				assignee, 
				reporter, 
				created_time, 
				updated_time, 
				resolved_time, 
				estimated, 
				remaining, 
				logged
			)
		values
			(
				#{project_id,jdbcType=INTEGER},
				#{issue_key,jdbcType=VARCHAR},
				#{issue_name,jdbcType=VARCHAR},
				#{summary,jdbcType=VARCHAR},
				#{type,jdbcType=VARCHAR},
				#{priority,jdbcType=VARCHAR},
				#{labels,jdbcType=VARCHAR},
				#{status,jdbcType=VARCHAR},
				#{description,jdbcType=VARCHAR},
				#{assignee,jdbcType=INTEGER},
				#{reporter,jdbcType=INTEGER},
				#{created_time,jdbcType=TIMESTAMP},
				#{updated_time,jdbcType=TIMESTAMP},
				#{resolved_time,jdbcType=TIMESTAMP},
				#{estimated,jdbcType=INTEGER},
				#{remaining,jdbcType=INTEGER},
				#{logged,jdbcType=INTEGER}
			)

	]]>
	</insert>
	
	<resultMap id="IssueBeanMap" type="name.lizhe.lira.module.issue.bean.IssueBean">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="issue_key" property="issue_key" jdbcType="VARCHAR" />
		<result column="issue_name" property="issue_name" jdbcType="VARCHAR" />
		<result column="summary" property="summary" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="priority" property="priority" jdbcType="VARCHAR" />
		<result column="labels" property="labels" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="assignee" property="assignee" jdbcType="INTEGER" />
		<result column="assignee_name" property="assignee_name" jdbcType="VARCHAR" />
		<result column="reporter" property="reporter" jdbcType="INTEGER" />
		<result column="reporter_name" property="reporter_name" jdbcType="VARCHAR" />
		<result column="created_time" property="created_time" jdbcType="DATE" />
		<result column="updated_time" property="updated_time" jdbcType="DATE" />
		<result column="resolved_time" property="resolved_time" jdbcType="DATE" />
		<result column="estimated" property="estimated" jdbcType="INTEGER" />
		<result column="remaining" property="remaining" jdbcType="INTEGER" />
		<result column="logged" property="logged" jdbcType="INTEGER" />
		<result column="project_name" property="project_name" jdbcType="VARCHAR" />
	</resultMap>

	<select id="getIssues" resultMap="IssueBeanMap" parameterType="java.util.Map">
	<![CDATA[
		select
			i.id,i.issue_key,i.name issue_name,i.summary,i.type,i.priority,i.labels,i.status,i.description,i.assignee,i.reporter,i.created_time,i.updated_time,i.resolved_time,i.estimated,i.remaining,i.logged
		from Issues i
			join Users u on i.assignee = u.id
		where u.name=#{name}
			order by i.id desc
		 	limit ${pageNumber},${rowNumber}
	]]>
	</select>
	
	<select id="getIssueCounts" resultType="string" parameterType="java.util.Map">
	<![CDATA[
		select
			count(*)
		from Issues i
			join Users u on i.assignee = u.id
		where u.name=#{username}
	]]>
	</select>
	
	
	
	<select id="getIssueById" parameterType="java.lang.String" resultMap="IssueBeanMap">
	<![CDATA[
		select i.id,
		i.issue_key,
		i.name issue_name,
		i.summary,
		i.type,
		i.priority,
		i.labels,
		i.status,
		i.description,
		i.assignee,
		u1.name assignee_name,
		i.reporter,
		u2.name reporter_name,
		i.created_time,
		i.updated_time,
		i.resolved_time,
		i.estimated,
		i.remaining,
		i.logged, 
		p.name project_name 
			from Issues i
		join Projects p on p.id = i.project_id
		join Users u1 on i.assignee = u1.id 
		join Users u2 on i.reporter = u2.id
			where i.id=#{id}
	]]>
	</select>
	
	<select id="getIssuesByCondition" resultMap="IssueBeanMap" parameterType="java.util.Map">
	<![CDATA[
		select
			i.id,i.issue_key,i.name issue_name,i.summary,i.type,i.priority,i.labels,i.status,i.description,i.assignee,i.reporter,i.created_time,i.updated_time,i.resolved_time,i.estimated,i.remaining,i.logged
		from Issues i where 1=1
	]]>
	<if test="project_id != null and project_id != ''">
		<![CDATA[
		and project_id=#{project_id}
		]]>
	</if>
	order by i.id desc
		 	limit ${pageNumber},${rowNumber}
	</select>
	
	<select id="getIssueCountsByCondition" resultType="string" parameterType="java.util.Map">
	<![CDATA[
		select
			count(*)
		from Issues i where 1=1
	]]>
	<if test="project_id != null and project_id != ''">
		<![CDATA[
		and project_id=#{project_id}
		]]>
	</if>
	</select>
	
	<update id="updateIssueDes" parameterType="java.util.Map">  
        <![CDATA[
        	update Issues 
        ]]>
        <trim prefix="set" suffixOverrides=",">   
        <if test="description != null and description != ''">
        	description = #{description,jdbcType=VARCHAR},
        </if>
        <if test="type != null and type != ''">
        	type = #{type,jdbcType=VARCHAR},
        </if>
        <if test="status != null and status != ''">
        	status = #{status,jdbcType=VARCHAR},
        </if>
        <if test="priority != null and priority != ''">
        	priority = #{priority,jdbcType=VARCHAR},
        </if>
        <if test="updated_time != null">
        	updated_time = #{updated_time,jdbcType=TIMESTAMP},
        </if>
        <if test="resolved_time != null">
        	resolved_time = #{resolved_time,jdbcType=TIMESTAMP},
        </if>
        <if test="created_time != null">
        	created_time = #{created_time,jdbcType=TIMESTAMP},
        </if>
        <if test="assignee != null and assignee != 0">
        	assignee = #{assignee,jdbcType=INTEGER},
        </if>
        <if test="reporter != null and reporter != 0">
        	reporter = #{reporter,jdbcType=INTEGER},
        </if>
        </trim>
        where id = #{id}
	</update>  
	
	
	
</mapper>